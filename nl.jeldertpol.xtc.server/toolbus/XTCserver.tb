process XTC is
	printf("TB: script is up and running...\n") .

	let
		Server : server,
		Client : client,
		Cid : int
	in
		(
			rec-connect(Server?)
			. printf("TB: XTC server connected...\n")
		)
		.
		(
			(
				rec-connect(Client?)
				. printf("TB: XTC client connected...\n")
				. create(XTCclient(Client, Server), Cid?)
			) * delta
		)
	endlet

process XTCclient(Client : client, Server : server) is
	printf("client\n") .
		
	(
		(
			let
				Nickname : str,
				Valid : bool
			in
				rec-request(Client, setNickname(Nickname?))
				. snd-eval(Server, setNickname(Nickname))
				. rec-value(Server, nicknameSet(Valid?))
				. snd-response(Client, setNickname(Valid))
				. printf("nickname set %d\n", Nickname)
			endlet
		)
		+
		(
			let
				Nickname : str
			in
				rec-msg(Client, disconnect(Nickname?))
				. snd-do(Server, disconnect(Nickname))
				. printf("Client disconnected %d\n", Nickname)
			endlet
		)
		+
		(
			let
				Project : str,
				Revision : term
			in
				rec-request(Client, getRevision(Project?))
				. snd-eval(Server, getRevision(Project))
				. rec-value(Server, gotRevision(Revision?))
				. snd-response(Client, getRevision(Revision))
				. printf("revision get %d\n", Revision)
			endlet
		)
		
	)
	*
	rec-disconnect(Client)
	//delta

tool server is {}
tool client is {}

toolbus(XTC)
